{"version":3,"sources":["webpack:///ng2-fullpage.6c95d5afc3c278af2754.bundle.js","webpack:///./components/fullpage/fullpage-options.class.ts?57cf","webpack:///./components/fullpage/fullpage.directive.ts?2550","webpack:///./components/fullpage/fullpage.service.ts?a319","webpack:///./components/fullpage/index.ts?9d6e","webpack:///./components/index.ts?3f42","webpack:///./index.ts","webpack:///./ng2-fullpage.ts"],"names":["webpackJsonp","95","module","exports","__webpack_require__","core_1","FullpageOptions","options","Object","assign","this","__decorate","Injectable","__metadata","96","$","fullpage_options_class_1","FullpageDirective","el","_el","extractName","property","propertyPrefix","length","toLowerCase","substring","prototype","ngOnInit","_i","_a","keys","startsWith","option","nativeElement","fullpage","Input","String","Boolean","Array","Number","Function","Directive","selector","ElementRef","197","FullpageService","moveSectionUp","fn","moveSectionDown","moveTo","section","slide","silentMoveTo","moveSlideRight","moveSlideLeft","setAutoScrolling","enable","setFitToSection","setLockAnchors","setAllowScrolling","allow","directions","setKeyboardScrolling","setRecordHistory","setScrollingSpeed","milliseconds","destroy","type","reBuild","198","fullpage_directive_1","fullpage_service_1","126","fullpage_1","FULLPAGE_DIRECTIVES","0","__export","m","p","hasOwnProperty","427","components_1","components_2","defineProperty","value","default","directives","slice"],"mappings":"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","file":"ng2-fullpage.6c95d5afc3c278af2754.bundle.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 95:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 15/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar FullpageOptions = (function () {\r\n\t    /**\r\n\t     * Public default constructor\r\n\t     *\r\n\t     * @param options options js-object\r\n\t     */\r\n\t    function FullpageOptions(options) {\r\n\t        if (options) {\r\n\t            Object.assign(this, options);\r\n\t        }\r\n\t    }\r\n\t    FullpageOptions = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [Object])\r\n\t    ], FullpageOptions);\r\n\t    return FullpageOptions;\r\n\t}());\r\n\texports.FullpageOptions = FullpageOptions;\r\n\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 12/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar $ = __webpack_require__(89);\r\n\t__webpack_require__(101);\r\n\tvar fullpage_options_class_1 = __webpack_require__(95);\r\n\tvar FullpageDirective = (function () {\r\n\t    /**\r\n\t     * Default public constructor\r\n\t     *\r\n\t     * @param el element where directive is placed on\r\n\t     */\r\n\t    function FullpageDirective(el) {\r\n\t        this._el = el;\r\n\t    }\r\n\t    /**\r\n\t     * Static method for option name retrieving\r\n\t     *\r\n\t     * @param property this class property name\r\n\t     * @returns {string} FullpageOption class option (property) name\r\n\t     */\r\n\t    FullpageDirective.extractName = function (property) {\r\n\t        return property[FullpageDirective.propertyPrefix.length].toLowerCase()\r\n\t            + property.substring(FullpageDirective.propertyPrefix.length + 1);\r\n\t    };\r\n\t    /**\r\n\t     * Perform actions on init\r\n\t     */\r\n\t    FullpageDirective.prototype.ngOnInit = function () {\r\n\t        /**\r\n\t         * Initialize options object with default (empty)\r\n\t         * values if it doesn't exist\r\n\t         */\r\n\t        if (!this.options) {\r\n\t            this.options = new fullpage_options_class_1.FullpageOptions();\r\n\t        }\r\n\t        /**\r\n\t         * Iterate over all properties of directive class\r\n\t         */\r\n\t        for (var _i = 0, _a = Object.keys(this); _i < _a.length; _i++) {\r\n\t            var property = _a[_i];\r\n\t            /**\r\n\t             * If property name doesn't start with 'fullpage' prefix (it is stored in\r\n\t             * FullpageDirective.propertyPrefix static property) then skip this property and\r\n\t             * continue the cycle\r\n\t             */\r\n\t            if (!property.startsWith(FullpageDirective.propertyPrefix)) {\r\n\t                continue;\r\n\t            }\r\n\t            /**\r\n\t             * Extract option name from the property name\r\n\t             *\r\n\t             * @type {string} option name\r\n\t             */\r\n\t            var option = FullpageDirective.extractName(property);\r\n\t            /**\r\n\t             * If options is already defined skip it\r\n\t             */\r\n\t            if (this.options[option]) {\r\n\t                continue;\r\n\t            }\r\n\t            /**\r\n\t             * Set property value to the options object property\r\n\t             */\r\n\t            this.options[option] = this[property];\r\n\t        }\r\n\t        /**\r\n\t         * Enable fullpage for the element\r\n\t         */\r\n\t        $(this._el.nativeElement).fullpage(this.options);\r\n\t    };\r\n\t    /**\r\n\t     * Prefix for directive-relative properties\r\n\t     *\r\n\t     * @type {string} prefix\r\n\t     */\r\n\t    FullpageDirective.propertyPrefix = 'fullpage';\r\n\t    __decorate([\r\n\t        core_1.Input('fullpage'), \r\n\t        __metadata('design:type', fullpage_options_class_1.FullpageOptions)\r\n\t    ], FullpageDirective.prototype, \"options\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageMenu\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageLockAnchors\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], FullpageDirective.prototype, \"fullpageAnchors\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageNavigation\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageNavigationPosition\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], FullpageDirective.prototype, \"fullpageNavigationTooltips\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageShowActiveTooltip\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageSlidesNavigation\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageSlidesNavPosition\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageCss3\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageScrollingSpeed\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageAutoScrolling\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageFitToSection\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageFitToSectionDelay\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageScrollBar\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageEasing\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageEasingcss3\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageLoopBottom\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageLoopTop\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageLoopHorizontal\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageContinuousVertical\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageNormalScrollElements\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageScrollOverflow\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageTouchSensitivity\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageNormalScrollElementTouchThreshold\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageKeyboardScrolling\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageAnimateAnchor\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageRecordHistory\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageControlArrows\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageVerticalCentered\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], FullpageDirective.prototype, \"fullpageResize\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], FullpageDirective.prototype, \"fullpageSectionsColor\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpagePaddingTop\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpagePaddingBottom\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageFixedElements\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageResponsiveWidth\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], FullpageDirective.prototype, \"fullpageResponsiveHeight\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageSectionSelector\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], FullpageDirective.prototype, \"fullpageSlideSelector\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageAfterLoad\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageOnLeave\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageAfterRender\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageAfterResize\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageAfterSlideLoad\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], FullpageDirective.prototype, \"fullpageOnSlideLeave\", void 0);\r\n\t    FullpageDirective = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '[fullpage]'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef])\r\n\t    ], FullpageDirective);\r\n\t    return FullpageDirective;\r\n\t}());\r\n\texports.FullpageDirective = FullpageDirective;\r\n\n\n/***/ },\n\n/***/ 197:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar $ = __webpack_require__(89);\r\n\t__webpack_require__(101);\r\n\tvar FullpageService = (function () {\r\n\t    function FullpageService() {\r\n\t    }\r\n\t    /**\r\n\t     * Scrolls one section up\r\n\t     */\r\n\t    FullpageService.prototype.moveSectionUp = function () {\r\n\t        $.fn.fullpage.moveSectionUp();\r\n\t    };\r\n\t    /**\r\n\t     * Scrolls one section down\r\n\t     */\r\n\t    FullpageService.prototype.moveSectionDown = function () {\r\n\t        $.fn.fullpage.moveSectionDown();\r\n\t    };\r\n\t    /**\r\n\t     * Scrolls the page to the given section and slide.\r\n\t     * The first slide, the visible one by default, will have index 0.\r\n\t     *\r\n\t     * @param section\r\n\t     * @param slide\r\n\t     */\r\n\t    FullpageService.prototype.moveTo = function (section, slide) {\r\n\t        $.fn.fullpage.moveTo(section, slide);\r\n\t    };\r\n\t    /**\r\n\t     * Exactly the same as moveTo but in this case it performs the scroll without animation.\r\n\t     * A direct jump to the destination.\r\n\t     *\r\n\t     * @param section\r\n\t     * @param slide\r\n\t     */\r\n\t    FullpageService.prototype.silentMoveTo = function (section, slide) {\r\n\t        $.fn.fullpage.silentMoveTo(section, slide);\r\n\t    };\r\n\t    /**\r\n\t     * Scrolls the horizontal slider of the current section to the next slide\r\n\t     */\r\n\t    FullpageService.prototype.moveSlideRight = function () {\r\n\t        $.fn.fullpage.moveSlideRight();\r\n\t    };\r\n\t    /**\r\n\t     * Scrolls the horizontal slider of the current section to the previous slide\r\n\t     */\r\n\t    FullpageService.prototype.moveSlideLeft = function () {\r\n\t        $.fn.fullpage.moveSlideLeft();\r\n\t    };\r\n\t    /**\r\n\t     * Sets the scrolling configuration in real time.\r\n\t     * Defines the way the page scrolling behaves. If it is set to true,\r\n\t     * it will use the \"automatic\" scrolling, otherwise, it will use the \"manual\"\r\n\t     * or \"normal\" scrolling of the site. Be careful when combining this option with\r\n\t     * scrollOverflow set to true, as it might be difficult to scroll using the mouse\r\n\t     * wheel or the trackpad when the section is scrollable\r\n\t     *\r\n\t     * @param enable\r\n\t     */\r\n\t    FullpageService.prototype.setAutoScrolling = function (enable) {\r\n\t        $.fn.fullpage.setAutoScrolling(enable);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value for the option fitToSection determining whether to fit\r\n\t     * the section in the screen or not.\r\n\t     *\r\n\t     * @param enable\r\n\t     */\r\n\t    FullpageService.prototype.setFitToSection = function (enable) {\r\n\t        $.fn.fullpage.setFitToSection(enable);\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value for the option lockAnchors determining whether\r\n\t     * anchors will have any effect in the URL or not.\r\n\t     *\r\n\t     * @param enable\r\n\t     */\r\n\t    FullpageService.prototype.setLockAnchors = function (enable) {\r\n\t        $.fn.fullpage.setLockAnchors(enable);\r\n\t    };\r\n\t    /**\r\n\t     * Adds or remove the possibility of scrolling through sections by\r\n\t     * using the mouse wheel/trackpad or touch gestures (which is active\r\n\t     * by default). Note this won't disable the keyboard scrolling.\r\n\t     * You would need to use setKeyboardScrolling for it.\r\n\t     *\r\n\t     * Directions: (optional parameter) Admitted values: all, up, down,\r\n\t     * left, right or a combination of them separated by commas like down,\r\n\t     * right. It defines the direction for which the scrolling will\r\n\t     * be enabled or disabled.\r\n\t     *\r\n\t     * @param allow\r\n\t     * @param directions\r\n\t     */\r\n\t    FullpageService.prototype.setAllowScrolling = function (allow, directions) {\r\n\t        $.fn.fullpage.setAllowScrolling(allow, directions);\r\n\t    };\r\n\t    /**\r\n\t     * Adds or remove the possibility of scrolling through sections by\r\n\t     * using the keyboard arrow keys (which is active by default).\r\n\t     *\r\n\t     * Directions: (optional parameter) Admitted values: all, up, down,\r\n\t     * left, right or a combination of them separated by commas like down,\r\n\t     * right. It defines the direction for which the scrolling will be\r\n\t     * enabled or disabled.\r\n\t     *\r\n\t     * @param allow\r\n\t     * @param directions\r\n\t     */\r\n\t    FullpageService.prototype.setKeyboardScrolling = function (allow, directions) {\r\n\t        $.fn.fullpage.setKeyboardScrolling(allow, directions);\r\n\t    };\r\n\t    /**\r\n\t     * Defines whether to record the history for each hash change in the URL\r\n\t     *\r\n\t     * @param enable\r\n\t     */\r\n\t    FullpageService.prototype.setRecordHistory = function (enable) {\r\n\t        $.fn.fullpage.setRecordHistory(enable);\r\n\t    };\r\n\t    /**\r\n\t     * Defines the scrolling speed in milliseconds\r\n\t     *\r\n\t     * @param milliseconds\r\n\t     */\r\n\t    FullpageService.prototype.setScrollingSpeed = function (milliseconds) {\r\n\t        $.fn.fullpage.setScrollingSpeed(milliseconds);\r\n\t    };\r\n\t    /**\r\n\t     * Destroys the plugin events and optionally its HTML markup and styles.\r\n\t     * Ideal to use when using AJAX to load content.\r\n\t     *\r\n\t     * type: can be empty or all. If all is passed, the HTML markup and styles\r\n\t     * used by fullpage.js will be removed. This way the original HTML markup,\r\n\t     * the one used before any plugin modification is made, will be maintained.\r\n\t     *\r\n\t     * @param type\r\n\t     */\r\n\t    FullpageService.prototype.destroy = function (type) {\r\n\t        $.fn.fullpage.destroy(type);\r\n\t    };\r\n\t    /**\r\n\t     * Updates the DOM structure to fit the new window size or its contents.\r\n\t     * Ideal to use in combination with AJAX calls or external changes in the\r\n\t     * DOM structure of the site.\r\n\t     */\r\n\t    FullpageService.prototype.reBuild = function () {\r\n\t        $.fn.fullpage.reBuild();\r\n\t    };\r\n\t    FullpageService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], FullpageService);\r\n\t    return FullpageService;\r\n\t}());\r\n\texports.FullpageService = FullpageService;\r\n\n\n/***/ },\n\n/***/ 198:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 15/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar fullpage_directive_1 = __webpack_require__(96);\r\n\texports.FullpageDirective = fullpage_directive_1.FullpageDirective;\r\n\tvar fullpage_options_class_1 = __webpack_require__(95);\r\n\texports.FullpageOptions = fullpage_options_class_1.FullpageOptions;\r\n\tvar fullpage_service_1 = __webpack_require__(197);\r\n\texports.FullpageService = fullpage_service_1.FullpageService;\r\n\n\n/***/ },\n\n/***/ 126:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 12/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar fullpage_directive_1 = __webpack_require__(96);\r\n\tvar fullpage_1 = __webpack_require__(198);\r\n\texports.FullpageDirective = fullpage_1.FullpageDirective;\r\n\texports.FullpageOptions = fullpage_1.FullpageOptions;\r\n\texports.FullpageService = fullpage_1.FullpageService;\r\n\texports.FULLPAGE_DIRECTIVES = [fullpage_directive_1.FullpageDirective];\r\n\n\n/***/ },\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(427));\r\n\n\n/***/ },\n\n/***/ 427:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\r\n\t */\r\n\t\"use strict\";\r\n\tvar components_1 = __webpack_require__(126);\r\n\tvar components_2 = __webpack_require__(126);\r\n\texports.FullpageDirective = components_2.FullpageDirective;\r\n\texports.FullpageOptions = components_2.FullpageOptions;\r\n\texports.FULLPAGE_DIRECTIVES = components_2.FULLPAGE_DIRECTIVES;\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.default = {\r\n\t    directives: components_1.FULLPAGE_DIRECTIVES.slice()\r\n\t};\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** ng2-fullpage.6c95d5afc3c278af2754.bundle.js\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 15/05/16.\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class FullpageOptions {\n\n    /**\n     * Notice:\n     *\n     * All documentation was taken from https://github.com/alvarotrigo/fullPage.js\n     */\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                Navigation                               |\n     * ---------------------------------------------------------------------------\n     */\n\n    /**\n     * A selector can be used to specify the menu to link with\n     * the sections. This way the scrolling of the sections will activate\n     * the corresponding element in the menu using the class active. This won't\n     * generate a menu but will just add the active class to the element in the\n     * given menu with the corresponding anchor links. In order to link the elements\n     * of the menu with the sections, an HTML 5 data-tag (data-menuanchor) will be\n     * needed to use with the same anchor links as used within the sections.\n     *\n     * @default false\n     */\n    public menu: string;\n\n    /**\n     * Determines whether anchors in the URL will have any effect at\n     * all in the plugin. You can still using anchors internally for\n     * your own functions and callbacks, but they won't have any effect\n     * in the scrolling of the site. Useful if you want to combine fullPage.js\n     * with other plugins using anchor in the URL.\n     */\n    public lockAnchors: boolean;\n\n    /**\n     * Defines the anchor links (#example) to be shown on the URL\n     * for each section. Anchors value should be unique. The position\n     * of the anchors in the array will define to which sections the\n     * anchor is applied. (second position for second section and so on).\n     * Using anchors forward and backward navigation will also be possible\n     * through the browser. This option also allows users to bookmark a\n     * specific section or slide. Be careful! anchors can not have the same\n     * value as any ID element on the site (or NAME element for IE). Now\n     * anchors can be defined directly in the HTML structure by using the\n     * attribute data-anchor as explained here.\n     *\n     * @default []\n     */\n    public anchors: Array<string>;\n\n    /**\n     * If set to true, it will show a navigation bar made up of small circles.\n     *\n     * @default false\n     */\n    public navigation: boolean;\n\n    /**\n     * It can be set to left or right and defines which\n     * position the navigation bar will be shown (if using one).\n     *\n     * @default none\n     */\n    public navigationPosition: string;\n\n    /**\n     * Defines the tooltips to show for the navigation circles\n     * in case they are being used.\n     *\n     * @default []\n     */\n    public navigationTooltips: Array<string>;\n\n    /**\n     * Shows a persistent tooltip for the actively viewed section\n     * in the vertical navigation.\n     *\n     * @default false\n     */\n    public showActiveTooltip: boolean;\n\n    /**\n     * If set to true it will show a navigation bar made up of\n     * small circles for each landscape slider on the site.\n     *\n     * @default false\n     */\n    public slidesNavigation: boolean;\n\n    /**\n     * Defines the position for the landscape navigation bar for sliders.\n     * Admits top and bottom as values. You may want to modify the CSS styles\n     * to determine the distance from the top or bottom as well as any other\n     * style such as color.\n     *\n     * @default bottom\n     */\n    public slidesNavPosition: string;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Scrolling                               |\n     * ---------------------------------------------------------------------------\n     */\n\n    /**\n     * Defines whether to use JavaScript or CSS3 transforms to scroll within\n     * sections and slides. Useful to speed up the movement in tablet and mobile\n     * devices with browsers supporting CSS3. If this option is set to true and\n     * the browser doesn't support CSS3, a jQuery fallback will be used instead.\n     *\n     * @default true\n     */\n    public css3: boolean;\n\n    /**\n     * Speed in milliseconds for the scrolling transitions.\n     *\n     * @default 700\n     */\n    public scrollingSpeed: number;\n\n    /**\n     * Defines whether to use the \"automatic\" scrolling or the \"normal\" one.\n     * It also has affects the way the sections fit in the browser/device window\n     * in tablets and mobile phones.\n     *\n     * @default true\n     */\n    public autoScrolling: boolean;\n\n    /**\n     * If fitToSection is set to true, this delays the fitting\n     * by the configured milliseconds.\n     *\n     * @default 1000\n     */\n    public fitToSection: boolean;\n\n    /**\n     * If fitToSection is set to true, this delays the fitting by\n     * the configured milliseconds.\n     *\n     * @default 1000\n     */\n    public fitToSectionDelay: number;\n\n    /**\n     * Determines whether to use scrollbar for the site or not.\n     * In case of using scroll bar, the autoScrolling functionality\n     * will still working as expected. The user will also be free to\n     * scroll the site with the scroll bar and fullPage.js will fit the\n     * section in the screen when scrolling finishes.\n     *\n     * @default false\n     */\n    public scrollBar: boolean;\n\n    /**\n     * Defines the transition effect to use for the vertical\n     * and horizontal scrolling. It requires the file\n     * vendors/jquery.easings.min.js or jQuery UI for using some\n     * of its transitions. Other libraries could be used instead.\n     *\n     * @default easeInOutCubic\n     */\n    public easing: string;\n\n    /**\n     * Defines the transition effect to use in case of using css3:true.\n     * You can use the pre-defined ones (such as linear, ease-out...) or\n     * create your own ones using the cubic-bezier function. You might\n     * want to use Matthew Lein CSS Easing Animation Tool for it.\n     *\n     * @default ease\n     */\n    public easingcss3: string;\n\n    /**\n     * Defines whether scrolling down in the last section should scroll\n     * to the first one or not\n     *\n     * @default false\n     */\n    public loopBottom: boolean;\n\n    /**\n     * Defines whether scrolling up in the first section should\n     * scroll to the last one or not.\n     *\n     * @default false\n     */\n    public loopTop: boolean;\n\n    /**\n     * Defines whether horizontal sliders will loop after reaching\n     * the last or previous slide or not.\n     *\n     * @default true\n     */\n    public loopHorizontal: boolean;\n\n    /**\n     * Defines whether scrolling down in the last section should\n     * scroll down to the first one or not, and if scrolling up in\n     * the first section should scroll up to the last one or not.\n     * Not compatible with loopTop or loopBottom.\n     *\n     * @default false\n     */\n    public continuousVertical: boolean;\n\n    /**\n     * If you want to avoid the auto scroll when scrolling over\n     * some elements, this is the option you need to use. (useful\n     * for maps, scrolling divs etc.) It requires a string with the\n     * jQuery selectors for those elements.\n     *\n     * @default null\n     */\n    public normalScrollElements: string;\n\n    /**\n     * Defines whether or not to create a scroll for the section\n     * in case its content is bigger than the height of it. When\n     * set to true, your content will be wrapped by the plugin.\n     * Consider using delegation or load your other scripts in the\n     * afterRender callback. In case of setting it to true, it requires\n     * the vendor plugin jquery.slimscroll.min and it should be\n     * loaded before the fullPage.js plugin.\n     *\n     * @default false\n     */\n    public scrollOverflow: boolean;\n\n    /**\n     * Defines a percentage of the browsers window width/height, and\n     * how far a swipe must measure for navigating to the next\n     * section / slide\n     *\n     * @default 5\n     */\n    public touchSensitivity: number;\n\n    /**\n     * Defines the threshold for the number of hops up the html node\n     * tree Fullpage will test to see if normalScrollElements is a match\n     * to allow scrolling functionality on divs on a touch device.\n     *\n     * @default 5\n     */\n    public normalScrollElementTouchThreshold: number;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                              Accessibility                              |\n     * ---------------------------------------------------------------------------\n     */\n\n    /**\n     * Defines if the content can be navigated using the keyboard\n     *\n     * @default true\n     */\n    public keyboardScrolling: boolean;\n\n    /**\n     * Defines whether the load of the site when given an\n     * anchor (#) will scroll with animation to its destination or\n     * will directly load on the given section.\n     *\n     * @default true\n     */\n    public animateAnchor: boolean;\n\n    /**\n     * Defines whether to push the state of the site to\n     * the browser's history. When set to true each\n     * section/slide of the site will act as a new page\n     * and the back and forward buttons of the browser will\n     * scroll the sections/slides to reach the previous or next\n     * state of the site. When set to false, the URL will keep\n     * changing but will have no effect ont he browser's history.\n     * This option is automatically turned off when using\n     * autoScrolling:false.\n     *\n     * @default true\n     */\n    public recordHistory: boolean;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Design                                  |\n     * ---------------------------------------------------------------------------\n     */\n\n    /**\n     * Determines whether to use control arrows for the\n     * slides to move right or left.\n     *\n     * @default true\n     */\n    public controlArrows: boolean;\n\n    /**\n     * Vertically centering of the content within sections.\n     * When set to true, your content will be wrapped by the plugin.\n     * Consider using delegation or load your other scripts\n     * in the afterRender callback.\n     *\n     * @default true\n     */\n    public verticalCentered: boolean;\n\n    /**\n     * Whether you want to resize the text when the window is resized.\n     *\n     * @default false\n     */\n    public resize: boolean;\n\n    /**\n     * Define the CSS background-color property for each section.\n     *\n     * @default none\n     */\n    public sectionsColor: Array<string>;\n\n    /**\n     * Defines the top padding for each section with\n     * a numerical value and its measure\n     * (paddingTop: '10px', paddingTop: '10em'...)\n     * Useful in case of using a fixed header.\n     *\n     * @default 0\n     */\n    public paddingTop: string;\n\n    /**\n     * Defines the bottom padding for each section with\n     * a numerical value and its measure\n     * (paddingBottom: '10px', paddingBottom: '10em'...).\n     * Useful in case of using a fixed footer.\n     *\n     * @default 0\n     */\n    public paddingBottom: string;\n\n    /**\n     * Defines which elements will be taken off the scrolling\n     * structure of the plugin which is necessary when using\n     * the css3 option to keep them fixed. It requires a string\n     * with the jQuery selectors for those elements.\n     *\n     * @default null\n     */\n    public fixedElements: string;\n\n    /**\n     * A normal scroll (autoScrolling:false) will be used under\n     * the defined width in pixels. A class fp-responsive is added\n     * to the body tag in case the user wants to use it for his own\n     * responsive CSS. For example, if set to 900, whenever the\n     * browser's width is less than 900 the plugin will scroll like\n     * a normal site.\n     *\n     * @default 0\n     */\n    public responsiveWidth: number;\n\n    /**\n     * A normal scroll (autoScrolling:false) will be used under\n     * the defined height in pixels. A class fp-responsive is added\n     * to the body tag in case the user wants to use it for his own\n     * responsive CSS. For example, if set to 900, whenever the browser's\n     * height is less than 900 the plugin will scroll\n     * like a normal site.\n     *\n     * @default 0\n     */\n    public responsiveHeight: number;\n\n    /**\n     * Defines the jQuery selector used for the plugin sections.\n     * It might need to be changed sometimes to avoid problem with\n     * other plugins using the same selectors as fullpage.js.\n     *\n     * @default .section\n     */\n    public sectionSelector: string;\n\n    /**\n     * Defines the jQuery selector used for the plugin slides.\n     * It might need to be changed sometimes to avoid problem\n     * with other plugins using the same selectors as fullpage.js.\n     *\n     * @default .slide\n     */\n    public slideSelector: string;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Callbacks                               |\n     * ---------------------------------------------------------------------------\n     */\n\n    /**\n     * Callback fired once the sections have been loaded, after\n     * the scrolling has ended.\n     *\n     * Parameters:\n     *   -  anchorLink: anchorLink corresponding to the section.\n     *   -  index: index of the section. Starting from 1.\n     *\n     * In case of not having anchorLinks defined in the plugin the\n     * index parameter would be the only one to use.\n     */\n    public afterLoad: (anchorLink: string, index: number) => void;\n\n    /**\n     * This callback is fired once the user leaves a section,\n     * in the transition to the new section. Returning false will\n     * cancel the move before it takes place.\n     *\n     * Parameters:\n     *    -  index: index of the leaving section. Starting from 1.\n     *    -  nextIndex: index of the destination section. Starting from 1.\n     *    -  direction: it will take the values up or down depending\n     *                  on the scrolling direction.\n     *\n     */\n    public onLeave: (index: number, nextIndex: number, direction: string) => void;\n\n    /**\n     * This callback is fired just after the structure of\n     * the page is generated. This is the callback you want to\n     * use to initialize other plugins or fire any code which requires\n     * the document to be ready (as this plugin modifies\n     * the DOM to create the resulting structure).\n     */\n    public afterRender: () => void;\n\n    /**\n     * This callback is fired after resizing the browser's window.\n     * Just after the sections are resized.\n     */\n    public afterResize: () => void;\n\n    /**\n     * Callback fired once the slide of a section have been loaded, after\n     * the scrolling has ended.\n     *\n     * Parameters:\n     *     -  anchorLink: anchorLink corresponding to the section.\n     *     -  index: index of the section. Starting from 1.\n     *     -  slideAnchor: anchor corresponding to the slide (in case there is)\n     *     -  slideIndex: index of the slide. Starting from 1. (the default slide\n     *                    doesn't count as slide, but as a section)\n     *\n     *  In case of not having anchorLinks defined for the slide or slides the\n     *  slideIndex parameter would be the only one to use.\n     */\n    public afterSlideLoad: (anchorLink: string, index: number,\n                            slideAnchor: string, slideIndex: number) => void;\n\n    /**\n     * This callback is fired once the user leaves an slide to go to another,\n     * in the transition to the new slide. Returning false will cancel the move\n     * before it takes place.\n     *\n     * Parameters:\n     *     -  anchorLink: anchorLink corresponding to the section.\n     *     -  index: index of the section. Starting from 1.\n     *     -  slideIndex: index of the slide. Starting from 0.\n     *     -  direction: takes the values right or left depending on the scrolling\n     *                   direction.\n     *     -  nextSlideIndex: index of the destination slide. Starting from 0.\n     *\n     */\n    public onSlideLeave: (anchorLink: string, index: number, slideIndex: number,\n                          direction: string, nextSlideIndex: number) => void;\n\n    /**\n     * Public default constructor\n     *\n     * @param options options js-object\n     */\n    constructor(options?: Object) {\n        if (options) {\n            Object.assign(this, options);\n        }\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/fullpage/fullpage-options.class.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 12/05/16.\n */\n\nimport {Directive, Input, OnInit, ElementRef} from '@angular/core';\n\nimport * as $ from 'jquery';\nimport 'fullpage.js';\n\nimport {FullpageOptions} from './fullpage-options.class';\n\n@Directive({\n    selector: '[fullpage]'\n})\nexport class FullpageDirective implements OnInit {\n\n    /**\n     * Prefix for directive-relative properties\n     * \n     * @type {string} prefix\n     */\n    private static propertyPrefix: string = 'fullpage';\n\n    /**\n     * Directive options reference\n     */\n    @Input('fullpage') public options: FullpageOptions;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                Navigation                               |\n     * ---------------------------------------------------------------------------\n     * \n     * @see FullpageOptions for documentation\n     */\n\n    @Input() public fullpageMenu: string;\n    @Input() public fullpageLockAnchors: boolean;\n    @Input() public fullpageAnchors: Array<string>;\n    @Input() public fullpageNavigation: boolean;\n    @Input() public fullpageNavigationPosition: string;\n    @Input() public fullpageNavigationTooltips: Array<string>;\n    @Input() public fullpageShowActiveTooltip: boolean;\n    @Input() public fullpageSlidesNavigation: boolean;\n    @Input() public fullpageSlidesNavPosition: string;\n    \n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Scrolling                               |\n     * ---------------------------------------------------------------------------\n     * \n     * @see FullpageOptions for documentation\n     */\n    \n    @Input() public fullpageCss3: boolean;\n    @Input() public fullpageScrollingSpeed: number;\n    @Input() public fullpageAutoScrolling: boolean;\n    @Input() public fullpageFitToSection: boolean;\n    @Input() public fullpageFitToSectionDelay: number;\n    @Input() public fullpageScrollBar: boolean;\n    @Input() public fullpageEasing: string;\n    @Input() public fullpageEasingcss3: string;\n    @Input() public fullpageLoopBottom: boolean;\n    @Input() public fullpageLoopTop: boolean;\n    @Input() public fullpageLoopHorizontal: boolean;\n    @Input() public fullpageContinuousVertical: boolean;\n    @Input() public fullpageNormalScrollElements: string;\n    @Input() public fullpageScrollOverflow: boolean;\n    @Input() public fullpageTouchSensitivity: number;\n    @Input() public fullpageNormalScrollElementTouchThreshold: number;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                              Accessibility                              |\n     * ---------------------------------------------------------------------------\n     * \n     * @see FullpageOptions for documentation\n     */\n    \n    @Input() public fullpageKeyboardScrolling: boolean;\n    @Input() public fullpageAnimateAnchor: boolean;\n    @Input() public fullpageRecordHistory: boolean;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Design                                  |\n     * ---------------------------------------------------------------------------\n     * \n     * @see FullpageOptions for documentation\n     */\n    \n    @Input() public fullpageControlArrows: boolean;\n    @Input() public fullpageVerticalCentered: boolean;\n    @Input() public fullpageResize: boolean;\n    @Input() public fullpageSectionsColor: Array<string>;\n    @Input() public fullpagePaddingTop: string;\n    @Input() public fullpagePaddingBottom: string;\n    @Input() public fullpageFixedElements: string;\n    @Input() public fullpageResponsiveWidth: number;\n    @Input() public fullpageResponsiveHeight: number;\n    @Input() public fullpageSectionSelector: string;\n    @Input() public fullpageSlideSelector: string;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                                 Callbacks                               |\n     * ---------------------------------------------------------------------------\n     * \n     * @see FullpageOptions for documentation\n     */\n    \n    @Input() public fullpageAfterLoad: (anchorLink: string, index: number) => void;\n    @Input() public fullpageOnLeave: (index: number, nextIndex: number, direction: string) => void;\n    @Input() public fullpageAfterRender: () => void;\n    @Input() public fullpageAfterResize: () => void;\n    @Input() public fullpageAfterSlideLoad: (anchorLink: string, index: number,\n                                             slideAnchor: string, slideIndex: number) => void;\n    @Input() public fullpageOnSlideLeave: (anchorLink: string, index: number, slideIndex: number,\n                                           direction: string, nextSlideIndex: number) => void;\n\n    /**\n     * ---------------------------------------------------------------------------\n     * |                              Class properties                           |\n     * ---------------------------------------------------------------------------\n     */\n\n     private _el: ElementRef;\n\n    /**\n     * Static method for option name retrieving\n     *\n     * @param property this class property name\n     * @returns {string} FullpageOption class option (property) name\n     */\n    private static extractName(property) {\n        return property[FullpageDirective.propertyPrefix.length].toLowerCase()\n            + property.substring(FullpageDirective.propertyPrefix.length + 1);\n    }\n\n    /**\n     * Default public constructor\n     *\n     * @param el element where directive is placed on\n     */\n    public constructor(el: ElementRef) {\n        this._el = el;\n    }\n\n    /**\n     * Perform actions on init\n     */\n    ngOnInit(): void {\n        /**\n         * Initialize options object with default (empty)\n         * values if it doesn't exist\n         */\n        if (!this.options) {\n            this.options = new FullpageOptions();\n        }\n\n        /**\n         * Iterate over all properties of directive class\n         */\n        for (let property of Object.keys(this)) {\n            /**\n             * If property name doesn't start with 'fullpage' prefix (it is stored in\n             * FullpageDirective.propertyPrefix static property) then skip this property and\n             * continue the cycle\n             */\n            if (!property.startsWith(FullpageDirective.propertyPrefix)) {\n                continue;\n            }\n\n            /**\n             * Extract option name from the property name\n             *\n             * @type {string} option name\n             */\n            let option = FullpageDirective.extractName(property);\n\n            /**\n             * If options is already defined skip it\n             */\n            if (this.options[option]) {\n                continue;\n            }\n\n            /**\n             * Set property value to the options object property\n             */\n            this.options[option] = this[property];\n        }\n\n        /**\n         * Enable fullpage for the element\n         */\n        (<any>$)(this._el.nativeElement).fullpage(this.options);\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/fullpage/fullpage.directive.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\n */\n\nimport {Injectable} from '@angular/core';\n\nimport * as $ from 'jquery';\nimport 'fullpage.js';\n\n@Injectable()\nexport class FullpageService {\n\n    /**\n     * Scrolls one section up\n     */\n    public moveSectionUp(): void {\n        $.fn.fullpage.moveSectionUp();\n    }\n\n    /**\n     * Scrolls one section down\n     */\n    public moveSectionDown() {\n        $.fn.fullpage.moveSectionDown();\n    }\n\n    /**\n     * Scrolls the page to the given section and slide.\n     * The first slide, the visible one by default, will have index 0.\n     *\n     * @param section\n     * @param slide\n     */\n    public moveTo(section, slide) {\n        $.fn.fullpage.moveTo(section, slide);\n    }\n\n    /**\n     * Exactly the same as moveTo but in this case it performs the scroll without animation.\n     * A direct jump to the destination.\n     *\n     * @param section\n     * @param slide\n     */\n    public silentMoveTo(section, slide) {\n        $.fn.fullpage.silentMoveTo(section, slide);\n    }\n\n    /**\n     * Scrolls the horizontal slider of the current section to the next slide\n     */\n    public moveSlideRight() {\n        $.fn.fullpage.moveSlideRight();\n    }\n\n    /**\n     * Scrolls the horizontal slider of the current section to the previous slide\n     */\n    public moveSlideLeft() {\n        $.fn.fullpage.moveSlideLeft();\n    }\n\n    /**\n     * Sets the scrolling configuration in real time.\n     * Defines the way the page scrolling behaves. If it is set to true,\n     * it will use the \"automatic\" scrolling, otherwise, it will use the \"manual\"\n     * or \"normal\" scrolling of the site. Be careful when combining this option with\n     * scrollOverflow set to true, as it might be difficult to scroll using the mouse\n     * wheel or the trackpad when the section is scrollable\n     *\n     * @param enable\n     */\n    public setAutoScrolling(enable: boolean) {\n        $.fn.fullpage.setAutoScrolling(enable);\n    }\n\n    /**\n     * Sets the value for the option fitToSection determining whether to fit\n     * the section in the screen or not.\n     *\n     * @param enable\n     */\n    public setFitToSection(enable: boolean) {\n        $.fn.fullpage.setFitToSection(enable);\n    }\n\n    /**\n     * Sets the value for the option lockAnchors determining whether\n     * anchors will have any effect in the URL or not.\n     *\n     * @param enable\n     */\n    public setLockAnchors(enable: boolean) {\n        $.fn.fullpage.setLockAnchors(enable);\n    }\n\n    /**\n     * Adds or remove the possibility of scrolling through sections by\n     * using the mouse wheel/trackpad or touch gestures (which is active\n     * by default). Note this won't disable the keyboard scrolling.\n     * You would need to use setKeyboardScrolling for it.\n     *\n     * Directions: (optional parameter) Admitted values: all, up, down,\n     * left, right or a combination of them separated by commas like down,\n     * right. It defines the direction for which the scrolling will\n     * be enabled or disabled.\n     *\n     * @param allow\n     * @param directions\n     */\n    public setAllowScrolling(allow: boolean, directions?: string) {\n        $.fn.fullpage.setAllowScrolling(allow, directions);\n    }\n\n    /**\n     * Adds or remove the possibility of scrolling through sections by\n     * using the keyboard arrow keys (which is active by default).\n     *\n     * Directions: (optional parameter) Admitted values: all, up, down,\n     * left, right or a combination of them separated by commas like down,\n     * right. It defines the direction for which the scrolling will be\n     * enabled or disabled.\n     *\n     * @param allow\n     * @param directions\n     */\n    public setKeyboardScrolling(allow: boolean, directions?: string) {\n        $.fn.fullpage.setKeyboardScrolling(allow, directions);\n    }\n\n    /**\n     * Defines whether to record the history for each hash change in the URL\n     *\n     * @param enable\n     */\n    public setRecordHistory(enable: boolean) {\n        $.fn.fullpage.setRecordHistory(enable);\n    }\n\n    /**\n     * Defines the scrolling speed in milliseconds\n     *\n     * @param milliseconds\n     */\n    public setScrollingSpeed(milliseconds: number) {\n        $.fn.fullpage.setScrollingSpeed(milliseconds);\n    }\n\n    /**\n     * Destroys the plugin events and optionally its HTML markup and styles.\n     * Ideal to use when using AJAX to load content.\n     *\n     * type: can be empty or all. If all is passed, the HTML markup and styles\n     * used by fullpage.js will be removed. This way the original HTML markup,\n     * the one used before any plugin modification is made, will be maintained.\n     *\n     * @param type\n     */\n    public destroy(type: string) {\n        $.fn.fullpage.destroy(type);\n    }\n\n    /**\n     * Updates the DOM structure to fit the new window size or its contents.\n     * Ideal to use in combination with AJAX calls or external changes in the\n     * DOM structure of the site.\n     */\n    public reBuild() {\n        $.fn.fullpage.reBuild();\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/fullpage/fullpage.service.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 15/05/16.\n */\n\nexport {FullpageDirective} from './fullpage.directive';\nexport {FullpageOptions} from './fullpage-options.class';\nexport {FullpageService} from './fullpage.service';\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/fullpage/index.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 12/05/16.\n */\n\nimport {FullpageDirective} from './fullpage/fullpage.directive';\n\nexport {FullpageDirective, FullpageOptions, FullpageService} from './fullpage';\nexport const FULLPAGE_DIRECTIVES: Array<any> = [FullpageDirective];\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/index.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\n */\n\nexport * from './ng2-fullpage';\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.ts\n **/","/**\n * @author Meiblorn (Vadim Fedorenko) <meiblorn@gmail.com | admin@meiblorn.com> on 11/05/16.\n */\n\nimport {FullpageDirective, FullpageOptions, FULLPAGE_DIRECTIVES} from './components';\n\nexport {FullpageDirective, FullpageOptions, FULLPAGE_DIRECTIVES} from './components';\nexport default {\n    directives: [\n        ...FULLPAGE_DIRECTIVES\n    ]\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2-fullpage.ts\n **/"],"sourceRoot":""}